NDSummary.OnToolTipsLoaded("CSharpClass:LessCodeEngine.Gizmos.Modules.VariableEvaluationEventArg",{1187:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1187\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">LessCodeEngine.&#8203;Gizmos.&#8203;Modules.</span>&#8203;VariableEvaluationEventArg</div></div></div></div>",1189:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1189\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private readonly</span> Func&lt;<span class=\"SHKeyword\">string</span>, Type[]&gt; evaluateGenericTypes</div></div></div>",1190:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1190\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private readonly string</span> genericTypes</div></div></div>",1192:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1192\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> VariableEvaluationEventArg(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">ExpressionEvaluator&nbsp;</td><td class=\"PName\">evaluator</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">null</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName\">onInstance</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">null</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">genericTypes</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">null</span>,</td></tr><tr><td class=\"PType first\">Func&lt;<span class=\"SHKeyword\">string</span>, Type[]&gt;&nbsp;</td><td class=\"PName\">evaluateGenericTypes</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Constructor of the VariableEvaluationEventArg</div></div>",1194:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1194\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public string</span> Name { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">The name of the variable to Evaluate</div></div>",1196:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1196\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private object</span> varValue</div></div></div>",1198:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1198\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public object</span> Value { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div></div><div class=\"TTSummary\">To set a value to this variable</div></div>",1199:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1199\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public bool</span> HasValue { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div></div><div class=\"TTSummary\">if true the variable is affected, if false it means that the variable does not exist.</div></div>",1200:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1200\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public object</span> This { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">In the case of on the fly instance property definition the instance of the object on which this Property is called.&nbsp; Otherwise is set to null.</div></div>",1201:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1201\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> ExpressionEvaluator Evaluator { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">A reference on the current expression evaluator.</div></div>",1202:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1202\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public bool</span> HasGenericTypes { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Is true if some generic types are specified with &lt;&gt;.&nbsp; false otherwise</div></div>",1204:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1204\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Type[] EvaluateGenericTypes()</div></div><div class=\"TTSummary\">In the case where generic types are specified with &lt;&gt; Evaluate all types and return an array of types</div></div>"});